# coding: utf-8
"""
Django settings for django-concurrency-test project.

Generated by 'django-admin startproject' using Django 3.0.10.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

from os import environ
from os.path import dirname, abspath, basename, normpath, join

# PATH CONFIGURATION
# Absolute filesystem path to the Django project directory:
DJANGO_ROOT = dirname(dirname(abspath(__file__)))

# Absolute filesystem path to the top-level project folder:
SITE_ROOT = dirname(DJANGO_ROOT)

# Site name:
SITE_NAME = basename(DJANGO_ROOT)
# END PATH CONFIGURATION


# DEBUG CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#debug
DEBUG = False

# See: https://docs.djangoproject.com/en/dev/ref/settings/#template-debug
TEMPLATE_DEBUG = DEBUG
# END DEBUG CONFIGURATION


# MANAGER CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#admins
ADMINS = (
    ('Alexandre Gouin', 'alexandre@galexy.me'),
)

# See: https://docs.djangoproject.com/en/dev/ref/settings/#managers
MANAGERS = ADMINS
# END MANAGER CONFIGURATION


# GENERAL CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#time-zone
TIME_ZONE = 'Europe/Paris'

# See: https://docs.djangoproject.com/en/dev/ref/settings/#language-code
LANGUAGE_CODE = 'fr'

# See: https://docs.djangoproject.com/en/dev/ref/settings/#site-id
SITE_ID = 1

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-i18n
USE_I18N = True

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-l10n
USE_L10N = True

# See: https://docs.djangoproject.com/en/dev/ref/settings/#use-tz
USE_TZ = True
# END GENERAL CONFIGURATION


# MEDIA CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#media-root
MEDIA_ROOT = normpath(join(SITE_ROOT, 'media'))

# See: https://docs.djangoproject.com/en/dev/ref/settings/#media-url
MEDIA_URL = '/media/'
# END MEDIA CONFIGURATION


# STATIC FILE CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#static-root
STATIC_ROOT = normpath(join(SITE_ROOT, 'assets'))

# See: https://docs.djangoproject.com/en/dev/ref/settings/#static-url
STATIC_URL = '/static/'

# See: https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#std:setting-STATICFILES_DIRS
STATICFILES_DIRS = (
    #normpath(join(SITE_ROOT, 'static')),
)

# See: https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#staticfiles-finders
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)
# END STATIC FILE CONFIGURATION


# SECRET CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#secret-key
# Note: This key should only be used for development and testing.
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = environ.get('SECRET_KEY', 'dty5#%cob%8!v38ncb3u4d3x6^%&q2c6(q3hmgi-t9x7$5l8j8')
# END SECRET CONFIGURATION


# SITE CONFIGURATION
# Hosts/domain names that are valid for this site
# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
ALLOWED_HOSTS = []
# END SITE CONFIGURATION


# FIXTURE CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-FIXTURE_DIRS
FIXTURE_DIRS = (
    normpath(join(SITE_ROOT, 'fixtures')),
)
# END FIXTURE CONFIGURATION


# MIDDLEWARE CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#middleware-classes
MIDDLEWARE = [
    # Default Django middleware.
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# END MIDDLEWARE CONFIGURATION


# AUTHENTICATION BACKEND CONFIGURATION
AUTHENTICATION_BACKENDS = [
    # Django ModelBackend is the default authentication backend.
    'django.contrib.auth.backends.ModelBackend',
]
# END AUTHENTICATION BACKEND CONFIGURATION

# URL CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#root-urlconf
ROOT_URLCONF = '%s.urls' % SITE_NAME
# END URL CONFIGURATION


# APP CONFIGURATION
DJANGO_APPS = (
    # Admin panel and documentation:
    'django.contrib.admin',
    'django.contrib.admindocs',

    # Default Django apps:
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

# Third party apps
THIRD_PARTY_APPS = (

)

# Apps specific for this project go here.
LOCAL_APPS = (
    'apps.main',
)

# See: https://docs.djangoproject.com/en/dev/ref/settings/#installed-apps
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS
# END APP CONFIGURATION


# WSGI CONFIGURATION
# See: https://docs.djangoproject.com/en/dev/ref/settings/#wsgi-application
WSGI_APPLICATION = '%s.wsgi.application' % SITE_NAME
# END WSGI CONFIGURATION


# PASSWORD HASHERS CONFIGURATION
# See : https://docs.djangoproject.com/fr/1.9/ref/settings/#std:setting-PASSWORD_HASHERS
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher',
]
# END PASSWORD HASHERS CONFIGURATION


# LOCALE CONFIGURATION
LOCALE_PATHS = (
    normpath(join(SITE_ROOT, 'locale')),
)
LANGUAGES = (
    ('fr', 'French'),
    ('en', 'English'),
)
DEFAULT_LANGUAGE = 1
# END LOCALE CONFIGURATION


# HTTP HEADERS SETTINGS
if environ.get('SECURE_BROWSER_XSS_FILTER', None) == 'True':
    SECURE_BROWSER_XSS_FILTER = True
else:
    SECURE_BROWSER_XSS_FILTER = False
if environ.get('SECURE_CONTENT_TYPE_NOSNIFF', None) == 'True':
    SECURE_CONTENT_TYPE_NOSNIFF = True
else:
    SECURE_CONTENT_TYPE_NOSNIFF = False
# END HTTP HEADERS SETTINGS


# BEGIN SESSION SETTINGS
# See : https://docs.djangoproject.com/fr/dev/ref/settings/#sessions
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_SAMESITE = environ.get('SESSION_COOKIE_SAMESITE', 'Strict')
try:
    SESSION_COOKIE_AGE = int(environ.get('SESSION_COOKIE_AGE', 1209600))  # 1209600 : 2 weeks in seconds
except ValueError:
    SESSION_COOKIE_AGE = 1209600
if environ.get('SESSION_COOKIE_HTTPONLY', None) == 'False':
    SESSION_COOKIE_HTTPONLY = False
else:
    SESSION_COOKIE_HTTPONLY = True
# END SESSION SETTINGS


# LOGIN SETTINGS
AUTH_USER_MODEL = 'main.DashboardUser'
LOGIN_URL = '/mon-compte/login/'
LOGIN_REDIRECT_URL = '/'
# END LOGIN SETTINGS


# CSRF COOKIE CONFIGURATION
CSRF_COOKIE_SAMESITE = environ.get('CSRF_COOKIE_SAMESITE', 'Strict')
try:
    CSRF_COOKIE_AGE = int(environ.get('CSRF_COOKIE_AGE', 31449600))  # 31449600 : 1 year in seconds
except ValueError:
    CSRF_COOKIE_AGE = 31449600
if environ.get('CSRF_USE_SESSIONS', None) == 'False':
    CSRF_USE_SESSIONS = False
else:
    CSRF_USE_SESSIONS = True
if environ.get('CSRF_COOKIE_HTTPONLY', None) == 'False':
    CSRF_COOKIE_HTTPONLY = False
else:
    CSRF_COOKIE_HTTPONLY = True
# END CSRF COOKIE CONFIGURATION


# CELERY SETTINGS
# See : http://docs.celeryproject.org/en/v4.0.2/userguide/configuration.html
if environ.get('CELERY_DEV', None) == 'False':
    CELERY_DEV = False
else:
    CELERY_DEV = True
# END CELERY SETTINGS
